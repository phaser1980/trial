{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\trial\\\\src\\\\pages\\\\AnalysisPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardContent, Typography, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst AnalysisPage = () => {\n  _s();\n  const [sequences, setSequences] = useState([]);\n  const [entropy, setEntropy] = useState(0);\n  const [predictionRate, setPredictionRate] = useState(0);\n  const [patternConfidence, setPatternConfidence] = useState(0);\n\n  // Calculate entropy from sequence\n  const calculateEntropy = data => {\n    const frequencies = {};\n    data.forEach(num => {\n      frequencies[num] = (frequencies[num] || 0) + 1;\n    });\n    return -Object.values(frequencies).reduce((sum, freq) => {\n      const p = freq / data.length;\n      return sum + p * Math.log2(p);\n    }, 0);\n  };\n\n  // Calculate prediction rate (simple implementation)\n  const calculatePredictionRate = data => {\n    if (data.length < 2) return 0;\n    let correct = 0;\n    for (let i = 1; i < data.length; i++) {\n      if (data[i] === data[i - 1]) correct++;\n    }\n    return correct / (data.length - 1) * 100;\n  };\n\n  // Calculate pattern confidence (simple implementation)\n  const calculatePatternConfidence = data => {\n    if (data.length < 4) return 0;\n    let patterns = 0;\n    for (let i = 0; i < data.length - 3; i++) {\n      if (data[i] === data[i + 2] && data[i + 1] === data[i + 3]) {\n        patterns++;\n      }\n    }\n    return patterns / (data.length - 3) * 100;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/sequences/1');\n        const data = await response.json();\n        setSequences(data);\n        const symbols = data.map(seq => seq.symbol);\n\n        // Calculate metrics\n        setEntropy(calculateEntropy(symbols));\n        setPredictionRate(calculatePredictionRate(symbols));\n        setPatternConfidence(calculatePatternConfidence(symbols));\n      } catch (error) {\n        console.error('Error fetching sequence data:', error);\n      }\n    };\n    fetchData();\n    // Poll for updates every 2 seconds\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const entropyData = {\n    labels: sequences.map((_, i) => i + 1).slice(-20),\n    datasets: [{\n      label: 'Entropy',\n      data: sequences.map((_, i) => calculateEntropy(sequences.slice(0, i + 1).map(s => s.symbol))).slice(-20),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const predictionData = {\n    labels: sequences.map((_, i) => i + 1).slice(-20),\n    datasets: [{\n      label: 'Prediction Rate',\n      data: sequences.map((_, i) => calculatePredictionRate(sequences.slice(0, i + 1).map(s => s.symbol))).slice(-20),\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Current Entropy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: entropy.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Prediction Rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: [predictionRate.toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Sample Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: sequences.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Pattern Confidence\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                children: [patternConfidence.toFixed(0), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Entropy Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: entropyData,\n                options: {\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      position: 'top'\n                    },\n                    title: {\n                      display: true,\n                      text: 'Entropy Over Time'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Prediction Accuracy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: predictionData,\n                options: {\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      position: 'top'\n                    },\n                    title: {\n                      display: true,\n                      text: 'Prediction Accuracy Over Time'\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalysisPage, \"06u1IsxWXfzFU17kFxBhNKaQinY=\");\n_c = AnalysisPage;\nexport default AnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Card","CardContent","Typography","Box","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","AnalysisPage","_s","sequences","setSequences","entropy","setEntropy","predictionRate","setPredictionRate","patternConfidence","setPatternConfidence","calculateEntropy","data","frequencies","forEach","num","Object","values","reduce","sum","freq","p","length","Math","log2","calculatePredictionRate","correct","i","calculatePatternConfidence","patterns","fetchData","response","fetch","json","symbols","map","seq","symbol","error","console","interval","setInterval","clearInterval","entropyData","labels","_","slice","datasets","label","s","borderColor","tension","predictionData","maxWidth","children","sx","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","mb","item","xs","md","toFixed","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["C:/Users/User/trial/src/pages/AnalysisPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardContent, Typography, Box } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface SequenceData {\n  symbol: number;\n  timestamp: string;\n}\n\nconst AnalysisPage: React.FC = () => {\n  const [sequences, setSequences] = useState<SequenceData[]>([]);\n  const [entropy, setEntropy] = useState<number>(0);\n  const [predictionRate, setPredictionRate] = useState<number>(0);\n  const [patternConfidence, setPatternConfidence] = useState<number>(0);\n\n  // Calculate entropy from sequence\n  const calculateEntropy = (data: number[]) => {\n    const frequencies: { [key: number]: number } = {};\n    data.forEach(num => {\n      frequencies[num] = (frequencies[num] || 0) + 1;\n    });\n    \n    return -Object.values(frequencies).reduce((sum, freq) => {\n      const p = freq / data.length;\n      return sum + p * Math.log2(p);\n    }, 0);\n  };\n\n  // Calculate prediction rate (simple implementation)\n  const calculatePredictionRate = (data: number[]) => {\n    if (data.length < 2) return 0;\n    let correct = 0;\n    for (let i = 1; i < data.length; i++) {\n      if (data[i] === data[i - 1]) correct++;\n    }\n    return (correct / (data.length - 1)) * 100;\n  };\n\n  // Calculate pattern confidence (simple implementation)\n  const calculatePatternConfidence = (data: number[]) => {\n    if (data.length < 4) return 0;\n    let patterns = 0;\n    for (let i = 0; i < data.length - 3; i++) {\n      if (data[i] === data[i + 2] && data[i + 1] === data[i + 3]) {\n        patterns++;\n      }\n    }\n    return (patterns / (data.length - 3)) * 100;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/sequences/1');\n        const data: SequenceData[] = await response.json();\n        setSequences(data);\n\n        const symbols = data.map(seq => seq.symbol);\n        \n        // Calculate metrics\n        setEntropy(calculateEntropy(symbols));\n        setPredictionRate(calculatePredictionRate(symbols));\n        setPatternConfidence(calculatePatternConfidence(symbols));\n      } catch (error) {\n        console.error('Error fetching sequence data:', error);\n      }\n    };\n\n    fetchData();\n    // Poll for updates every 2 seconds\n    const interval = setInterval(fetchData, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const entropyData = {\n    labels: sequences.map((_, i) => i + 1).slice(-20),\n    datasets: [{\n      label: 'Entropy',\n      data: sequences.map((_, i) => \n        calculateEntropy(sequences.slice(0, i + 1).map(s => s.symbol))\n      ).slice(-20),\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1,\n    }],\n  };\n\n  const predictionData = {\n    labels: sequences.map((_, i) => i + 1).slice(-20),\n    datasets: [{\n      label: 'Prediction Rate',\n      data: sequences.map((_, i) => \n        calculatePredictionRate(sequences.slice(0, i + 1).map(s => s.symbol))\n      ).slice(-20),\n      borderColor: 'rgb(255, 99, 132)',\n      tension: 0.1,\n    }],\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Analysis Dashboard\n        </Typography>\n\n        <Grid container spacing={3} sx={{ mb: 3 }}>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Current Entropy\n                </Typography>\n                <Typography variant=\"h4\">\n                  {entropy.toFixed(2)}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Prediction Rate\n                </Typography>\n                <Typography variant=\"h4\">\n                  {predictionRate.toFixed(0)}%\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Sample Size\n                </Typography>\n                <Typography variant=\"h4\">\n                  {sequences.length}\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Pattern Confidence\n                </Typography>\n                <Typography variant=\"h4\">\n                  {patternConfidence.toFixed(0)}%\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Entropy Analysis\n                </Typography>\n                <Line \n                  data={entropyData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: {\n                        position: 'top' as const,\n                      },\n                      title: {\n                        display: true,\n                        text: 'Entropy Over Time'\n                      }\n                    }\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Prediction Accuracy\n                </Typography>\n                <Line \n                  data={predictionData}\n                  options={{\n                    responsive: true,\n                    plugins: {\n                      legend: {\n                        position: 'top' as const,\n                      },\n                      title: {\n                        display: true,\n                        text: 'Prediction Accuracy Over Time'\n                      }\n                    }\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default AnalysisPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}