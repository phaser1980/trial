{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\trial\\\\src\\\\pages\\\\GameAnalysisPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Container, Grid, Button, Typography, Box, Paper, Alert, CircularProgress, ButtonGroup, IconButton } from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Backend API response interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// API Configuration\nconst API_BASE_URL = 'http://localhost:5000';\nconst API_ENDPOINTS = {\n  SEQUENCES: `${API_BASE_URL}/api/sequences`,\n  ANALYSIS: `${API_BASE_URL}/api/analysis`,\n  ADD_SYMBOL: `${API_BASE_URL}/api/sequences/symbol`,\n  UNDO: `${API_BASE_URL}/api/sequences/undo`,\n  GENERATE: `${API_BASE_URL}/api/sequences/generate-test-data`,\n  RESET: `${API_BASE_URL}/api/sequences/reset`\n};\n\n// Debug fetch wrapper\nconst debugFetch = async (url, options = {}) => {\n  console.group(`API Call: ${options.method || 'GET'} ${url}`);\n  console.log('Request Options:', options);\n  try {\n    const response = await fetch(url, options);\n    console.log('Response Status:', response.status);\n    if (!response.ok) {\n      console.error('Response Error:', response.statusText);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Response Data:', data);\n    return data;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Analysis data transformer\nconst transformAnalysisData = backendData => {\n  if (!(backendData !== null && backendData !== void 0 && backendData.sampleAnalysis)) {\n    return {\n      markovChain: {\n        confidence: 0.25\n      },\n      entropy: {\n        confidence: 0.25\n      },\n      chiSquare: {\n        confidence: 0.25\n      },\n      monteCarlo: {\n        confidence: 0.25\n      }\n    };\n  }\n  const {\n    prediction,\n    confidence,\n    matrix\n  } = backendData.sampleAnalysis;\n  return {\n    markovChain: {\n      matrix,\n      predictedNext: prediction,\n      confidence\n    },\n    entropy: {\n      predictedNext: prediction,\n      confidence,\n      value: confidence // placeholder for entropy value\n    },\n    chiSquare: {\n      predictedNext: prediction,\n      confidence,\n      value: confidence // placeholder for chi-square value\n    },\n    monteCarlo: {\n      predictedNext: prediction,\n      confidence\n    }\n  };\n};\nconst GameAnalysisPage = () => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [analysisData, setAnalysisData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n  const symbols = ['♠', '♥', '♦', '♣'];\n  const sessionId = useMemo(() => uuidv4(), []);\n  const handleError = (message, type = 'error') => {\n    setError({\n      message,\n      type,\n      timestamp: Date.now()\n    });\n    if (type === 'error') {\n      setRetryCount(prev => prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (retryCount >= MAX_RETRIES) {\n      handleError('Maximum retry attempts reached. Please refresh the page.', 'warning');\n    }\n  }, [retryCount]);\n  useEffect(() => {\n    const socket = new WebSocket(`ws://localhost:5000/ws/${sessionId}`);\n    socket.onmessage = event => {\n      const update = JSON.parse(event.data);\n      if (update.type === 'sequence_update') {\n        setAnalysisData(update.data.analysisResults);\n      }\n    };\n    return () => {\n      socket.close();\n    };\n  }, [sessionId]);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const [sequenceData, analysisData] = await Promise.all([debugFetch(API_ENDPOINTS.SEQUENCES), debugFetch(API_ENDPOINTS.ANALYSIS)]);\n      console.log('Raw API Response:', analysisData);\n      if (sequenceData.sequence) {\n        setSequence(sequenceData.sequence);\n      }\n      setAnalysisData(transformAnalysisData(analysisData));\n    } catch (error) {\n      console.error('Error loading data:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const handleCardClick = async index => {\n    try {\n      if (retryCount >= MAX_RETRIES) {\n        handleError('Please refresh the page to continue.', 'warning');\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      const data = await debugFetch(API_ENDPOINTS.ADD_SYMBOL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol: index\n        })\n      });\n      setSequence(prev => [...prev, {\n        symbol: index,\n        created_at: new Date().toISOString()\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to submit sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const undoLastSymbol = async () => {\n    try {\n      await debugFetch(API_ENDPOINTS.UNDO, {\n        method: 'DELETE'\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to undo last symbol');\n    }\n  };\n  const generateTestData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await debugFetch(API_ENDPOINTS.GENERATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to generate test data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetDatabase = async () => {\n    try {\n      setError(null);\n      await debugFetch(API_ENDPOINTS.RESET, {\n        method: 'POST'\n      });\n      await loadData();\n      handleError('Database reset successfully', 'info');\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to reset database');\n    }\n  };\n  const renderAnalysisValue = (name, data) => {\n    if (!data) return 'No Data Available';\n\n    // Safely handle each analysis type\n    if (name === 'Markov' && Array.isArray(data.matrix)) {\n      var _data$matrix$0$length, _data$matrix$;\n      return `Matrix: ${data.matrix.length}x${(_data$matrix$0$length = (_data$matrix$ = data.matrix[0]) === null || _data$matrix$ === void 0 ? void 0 : _data$matrix$.length) !== null && _data$matrix$0$length !== void 0 ? _data$matrix$0$length : 0}`;\n    }\n    if (['Entropy', 'Chi²'].includes(name) && data.value !== undefined) {\n      return `Value: ${data.value.toFixed(3)}`;\n    }\n    if (name === 'Monte Carlo') {\n      return ''; // No value to display\n    }\n    return 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: error.type,\n      onClose: () => setError(null),\n      sx: {\n        mb: 2\n      },\n      children: [error.message, error.type === 'warning' && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => window.location.reload(),\n        sx: {\n          ml: 2\n        },\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Game Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mb: 2,\n                '& .MuiButton-root': {\n                  fontSize: '1.5rem',\n                  padding: '12px 24px'\n                }\n              },\n              children: symbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleCardClick(index),\n                disabled: loading,\n                children: symbol\n              }, symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: generateTestData,\n              disabled: loading,\n              sx: {\n                mr: 2\n              },\n              children: \"Generate Test Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: undoLastSymbol,\n              disabled: loading || sequence.length === 0,\n              color: \"primary\",\n              size: \"large\",\n              children: /*#__PURE__*/_jsxDEV(UndoIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: resetDatabase,\n              disabled: loading,\n              sx: {\n                ml: 2\n              },\n              children: \"Reset DB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Symbols: \", sequence.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              p: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: Object.entries({\n              'Markov': analysisData.markovChain,\n              'Entropy': analysisData.entropy,\n              'Chi²': analysisData.chiSquare,\n              'Monte Carlo': analysisData.monteCarlo\n            }).map(([name, data]) => data && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 1,\n                sx: {\n                  p: 1,\n                  backgroundColor: 'background.default',\n                  height: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 0.5\n                  },\n                  children: renderAnalysisValue(name, data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Next: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: data.predictedNext !== undefined && data.predictedNext !== null ? symbols[data.predictedNext] : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  color: \"text.secondary\",\n                  children: [\"Conf: \", data.confidence ? `${(data.confidence * 100).toFixed(0)}%` : 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 23\n              }, this)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(GameAnalysisPage, \"IbP0eKdK9MsM2ua2cPtP81zWmMg=\");\n_c = GameAnalysisPage;\nexport default GameAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"GameAnalysisPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Container","Grid","Button","Typography","Box","Paper","Alert","CircularProgress","ButtonGroup","IconButton","UndoIcon","v4","uuidv4","jsxDEV","_jsxDEV","API_BASE_URL","API_ENDPOINTS","SEQUENCES","ANALYSIS","ADD_SYMBOL","UNDO","GENERATE","RESET","debugFetch","url","options","console","group","method","log","response","fetch","status","ok","error","statusText","Error","data","json","groupEnd","transformAnalysisData","backendData","sampleAnalysis","markovChain","confidence","entropy","chiSquare","monteCarlo","prediction","matrix","predictedNext","value","GameAnalysisPage","_s","sequence","setSequence","analysisData","setAnalysisData","loading","setLoading","setError","retryCount","setRetryCount","MAX_RETRIES","symbols","sessionId","handleError","message","type","timestamp","Date","now","prev","socket","WebSocket","onmessage","event","update","JSON","parse","analysisResults","close","loadData","sequenceData","Promise","all","handleCardClick","index","headers","body","stringify","symbol","created_at","toISOString","undoLastSymbol","generateTestData","resetDatabase","renderAnalysisValue","name","Array","isArray","_data$matrix$0$length","_data$matrix$","length","includes","undefined","toFixed","maxWidth","sx","mt","mb","children","severity","onClose","size","onClick","window","location","reload","ml","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","elevation","p","variant","gutterBottom","fontSize","padding","map","disabled","display","alignItems","mr","color","justifyContent","Object","entries","backgroundColor","height","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/User/trial/src/pages/GameAnalysisPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Container,\n  Grid,\n  Button,\n  Typography,\n  Box,\n  Paper,\n  Alert,\n  CircularProgress,\n  ButtonGroup,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface SequenceItem {\n  symbol: number;\n  created_at: string;\n}\n\ninterface AnalysisData {\n  markovChain?: {\n    matrix?: number[][]; \n    predictedNext?: number;\n    confidence: number;\n  };\n  entropy?: {\n    value?: number; \n    predictedNext?: number;\n    confidence: number;\n  };\n  chiSquare?: {\n    value?: number; \n    predictedNext?: number;\n    confidence: number;\n  };\n  monteCarlo?: {\n    predictedNext?: number;\n    confidence: number;\n  };\n}\n\ninterface SequenceResponse {\n  success: boolean;\n  batchId: string;\n  sequence: SequenceItem;\n}\n\ninterface WebSocketUpdate {\n  type: 'sequence_update';\n  data: {\n    analysisResults: AnalysisData;\n    sequence: SequenceItem;\n  };\n}\n\ninterface ErrorState {\n  message: string;\n  type: 'error' | 'warning' | 'info';\n  timestamp: number;\n}\n\n// Backend API response interface\ninterface BackendAnalysisResponse {\n  symbols: number;\n  tools: string[];\n  sampleAnalysis: {\n    matrix: Record<string, Record<string, number>>;\n    prediction: number;\n    confidence: number;\n    accuracy: number;\n  };\n}\n\n// API Configuration\nconst API_BASE_URL = 'http://localhost:5000';\nconst API_ENDPOINTS = {\n  SEQUENCES: `${API_BASE_URL}/api/sequences`,\n  ANALYSIS: `${API_BASE_URL}/api/analysis`,\n  ADD_SYMBOL: `${API_BASE_URL}/api/sequences/symbol`,\n  UNDO: `${API_BASE_URL}/api/sequences/undo`,\n  GENERATE: `${API_BASE_URL}/api/sequences/generate-test-data`,\n  RESET: `${API_BASE_URL}/api/sequences/reset`\n};\n\n// Debug fetch wrapper\nconst debugFetch = async (url: string, options: RequestInit = {}) => {\n  console.group(`API Call: ${options.method || 'GET'} ${url}`);\n  console.log('Request Options:', options);\n  \n  try {\n    const response = await fetch(url, options);\n    console.log('Response Status:', response.status);\n    \n    if (!response.ok) {\n      console.error('Response Error:', response.statusText);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log('Response Data:', data);\n    return data;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Analysis data transformer\nconst transformAnalysisData = (backendData: BackendAnalysisResponse | null): AnalysisData => {\n  if (!backendData?.sampleAnalysis) {\n    return {\n      markovChain: { confidence: 0.25 },\n      entropy: { confidence: 0.25 },\n      chiSquare: { confidence: 0.25 },\n      monteCarlo: { confidence: 0.25 }\n    };\n  }\n\n  const { prediction, confidence, matrix } = backendData.sampleAnalysis;\n  \n  return {\n    markovChain: {\n      matrix,\n      predictedNext: prediction,\n      confidence\n    },\n    entropy: {\n      predictedNext: prediction,\n      confidence,\n      value: confidence // placeholder for entropy value\n    },\n    chiSquare: {\n      predictedNext: prediction,\n      confidence,\n      value: confidence // placeholder for chi-square value\n    },\n    monteCarlo: {\n      predictedNext: prediction,\n      confidence\n    }\n  };\n};\n\nconst GameAnalysisPage: React.FC = () => {\n  const [sequence, setSequence] = useState<SequenceItem[]>([]);\n  const [analysisData, setAnalysisData] = useState<AnalysisData>({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<ErrorState | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n\n  const symbols = ['♠', '♥', '♦', '♣'];\n\n  const sessionId = useMemo(() => uuidv4(), []);\n\n  const handleError = (message: string, type: ErrorState['type'] = 'error') => {\n    setError({\n      message,\n      type,\n      timestamp: Date.now()\n    });\n    \n    if (type === 'error') {\n      setRetryCount(prev => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (retryCount >= MAX_RETRIES) {\n      handleError('Maximum retry attempts reached. Please refresh the page.', 'warning');\n    }\n  }, [retryCount]);\n\n  useEffect(() => {\n    const socket = new WebSocket(`ws://localhost:5000/ws/${sessionId}`);\n    \n    socket.onmessage = (event) => {\n      const update: WebSocketUpdate = JSON.parse(event.data);\n      if (update.type === 'sequence_update') {\n        setAnalysisData(update.data.analysisResults);\n      }\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, [sessionId]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [sequenceData, analysisData] = await Promise.all([\n        debugFetch(API_ENDPOINTS.SEQUENCES),\n        debugFetch(API_ENDPOINTS.ANALYSIS)\n      ]);\n\n      console.log('Raw API Response:', analysisData);\n\n      if (sequenceData.sequence) {\n        setSequence(sequenceData.sequence);\n      }\n\n      setAnalysisData(transformAnalysisData(analysisData));\n\n    } catch (error) {\n      console.error('Error loading data:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleCardClick = async (index: number) => {\n    try {\n      if (retryCount >= MAX_RETRIES) {\n        handleError('Please refresh the page to continue.', 'warning');\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n      \n      const data = await debugFetch(API_ENDPOINTS.ADD_SYMBOL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol: index })\n      });\n      \n      setSequence(prev => [...prev, {\n        symbol: index,\n        created_at: new Date().toISOString()\n      }]);\n      \n    } catch (error) {\n      console.error('Error:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to submit sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const undoLastSymbol = async () => {\n    try {\n      await debugFetch(API_ENDPOINTS.UNDO, {\n        method: 'DELETE'\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to undo last symbol');\n    }\n  };\n\n  const generateTestData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      \n      await debugFetch(API_ENDPOINTS.GENERATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to generate test data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetDatabase = async () => {\n    try {\n      setError(null);\n      await debugFetch(API_ENDPOINTS.RESET, {\n        method: 'POST'\n      });\n      await loadData();\n      handleError('Database reset successfully', 'info');\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to reset database');\n    }\n  };\n\n  const renderAnalysisValue = (name: string, data: any) => {\n    if (!data) return 'No Data Available';\n\n    // Safely handle each analysis type\n    if (name === 'Markov' && Array.isArray(data.matrix)) {\n      return `Matrix: ${data.matrix.length}x${data.matrix[0]?.length ?? 0}`;\n    }\n\n    if (['Entropy', 'Chi²'].includes(name) && data.value !== undefined) {\n      return `Value: ${data.value.toFixed(3)}`;\n    }\n\n    if (name === 'Monte Carlo') {\n      return ''; // No value to display\n    }\n\n    return 'N/A';\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {error && (\n        <Alert \n          severity={error.type}\n          onClose={() => setError(null)}\n          sx={{ mb: 2 }}\n        >\n          {error.message}\n          {error.type === 'warning' && (\n            <Button\n              size=\"small\"\n              onClick={() => window.location.reload()}\n              sx={{ ml: 2 }}\n            >\n              Refresh Page\n            </Button>\n          )}\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* Game Controls */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Game Controls\n            </Typography>\n            <Box sx={{ mb: 3 }}>\n              <ButtonGroup \n                variant=\"contained\" \n                size=\"large\"\n                sx={{ \n                  mb: 2,\n                  '& .MuiButton-root': {\n                    fontSize: '1.5rem',\n                    padding: '12px 24px',\n                  }\n                }}\n              >\n                {symbols.map((symbol, index) => (\n                  <Button\n                    key={symbol}\n                    onClick={() => handleCardClick(index)}\n                    disabled={loading}\n                  >\n                    {symbol}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Button\n                variant=\"contained\"\n                onClick={generateTestData}\n                disabled={loading}\n                sx={{ mr: 2 }}\n              >\n                Generate Test Data\n              </Button>\n              <IconButton \n                onClick={undoLastSymbol}\n                disabled={loading || sequence.length === 0}\n                color=\"primary\"\n                size=\"large\"\n              >\n                <UndoIcon fontSize=\"large\" />\n              </IconButton>\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={resetDatabase}\n                disabled={loading}\n                sx={{ ml: 2 }}\n              >\n                Reset DB\n              </Button>\n            </Box>\n            <Typography variant=\"h6\">\n              Total Symbols: {sequence.length}\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Analysis Results */}\n        <Grid item xs={12} md={5}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Analysis Results\n            </Typography>\n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n                <CircularProgress />\n              </Box>\n            ) : (\n              <Grid container spacing={2}>\n                {Object.entries({\n                  'Markov': analysisData.markovChain,\n                  'Entropy': analysisData.entropy,\n                  'Chi²': analysisData.chiSquare,\n                  'Monte Carlo': analysisData.monteCarlo\n                }).map(([name, data]) => (\n                  data && (\n                    <Grid item xs={8} key={name}>\n                      <Paper \n                        elevation={1} \n                        sx={{ \n                          p: 1, \n                          backgroundColor: 'background.default',\n                          height: '100%'\n                        }}\n                      >\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\n                          {name}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                          {renderAnalysisValue(name, data)}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          Next: <strong>\n                            {data.predictedNext !== undefined && data.predictedNext !== null\n                              ? symbols[data.predictedNext]\n                              : 'N/A'}\n                          </strong>\n                        </Typography>\n                        <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                          Conf: {data.confidence ? `${(data.confidence * 100).toFixed(0)}%` : 'N/A'}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  )\n                ))}\n              </Grid>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default GameAnalysisPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}