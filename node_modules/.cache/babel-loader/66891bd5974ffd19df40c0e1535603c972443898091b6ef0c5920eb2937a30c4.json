{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\trial\\\\src\\\\pages\\\\GamePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Grid, Typography, Button, Box, ButtonGroup, IconButton, Tooltip, LinearProgress, Alert, Paper } from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [thresholdInfo, setThresholdInfo] = useState({\n    level: 1,\n    message: '100 more symbols until Markov Chain Analysis',\n    color: 'warning'\n  });\n  const symbols = ['♠', '♥', '♦', '♣'];\n  const loadSequence = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sequences/1');\n      const data = await response.json();\n\n      // Ensure data.symbols exists and is an array\n      const symbolsArray = Array.isArray(data === null || data === void 0 ? void 0 : data.symbols) ? data.symbols : [];\n\n      // Type guard to ensure each item has the required properties\n      const isValidSymbolItem = item => {\n        return item && typeof item.symbol === 'number' && typeof item.created_at === 'string';\n      };\n      const formattedSequence = symbolsArray.filter(isValidSymbolItem).map(item => ({\n        symbol: item.symbol,\n        timestamp: item.created_at\n      }));\n      setSequence(formattedSequence);\n      setThresholdInfo(getThresholdInfo(formattedSequence.length));\n    } catch (error) {\n      console.error('Error loading sequence:', error);\n      setSequence([]);\n    }\n  };\n  useEffect(() => {\n    loadSequence();\n  }, []);\n  const addSymbol = async symbolIndex => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sequences/1/symbol', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol: symbolIndex\n        })\n      });\n      const data = await response.json();\n      if (!(data !== null && data !== void 0 && data.created_at)) {\n        throw new Error('Invalid response from server');\n      }\n      const newSymbol = {\n        symbol: symbolIndex,\n        timestamp: data.created_at\n      };\n      setSequence(prevSequence => {\n        // Ensure prevSequence is an array\n        const safeSequence = Array.isArray(prevSequence) ? prevSequence : [];\n        return [...safeSequence, newSymbol];\n      });\n      setThresholdInfo(prevInfo => getThresholdInfo(sequence.length + 1));\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n  const undoLastSymbol = async () => {\n    if (!Array.isArray(sequence) || sequence.length === 0) return;\n    try {\n      await fetch('http://localhost:5000/api/sequences/1/undo', {\n        method: 'DELETE'\n      });\n      setSequence(prevSequence => {\n        // Ensure prevSequence is an array\n        const safeSequence = Array.isArray(prevSequence) ? prevSequence : [];\n        return safeSequence.slice(0, -1);\n      });\n      setThresholdInfo(prevInfo => getThresholdInfo(sequence.length - 1));\n    } catch (error) {\n      console.error('Error undoing last symbol:', error);\n    }\n  };\n  const simulateSequence = async () => {\n    for (let i = 0; i < 90; i++) {\n      const randomValue = Math.floor(Math.random() * 4);\n      await addSymbol(randomValue);\n      // Small delay to prevent overwhelming the server\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n  };\n  const clearDatabase = async () => {\n    try {\n      await fetch('http://localhost:5000/api/sequences/cleanup', {\n        method: 'DELETE'\n      });\n      setSequence([]);\n      setThresholdInfo({\n        level: 1,\n        message: '100 more symbols until Markov Chain Analysis',\n        color: 'warning'\n      });\n    } catch (error) {\n      console.error('Error clearing database:', error);\n    }\n  };\n  const getThresholdInfo = count => {\n    if (count >= 300) {\n      return {\n        level: 4,\n        message: 'Autocorrelation Analysis Active',\n        color: 'success'\n      };\n    } else if (count >= 200) {\n      return {\n        level: 3,\n        message: 'Runs Test Analysis Active',\n        color: 'info'\n      };\n    } else if (count >= 100) {\n      return {\n        level: 2,\n        message: 'Markov Chain Analysis Active',\n        color: 'primary'\n      };\n    } else {\n      return {\n        level: 1,\n        message: `${100 - count} more symbols until Markov Chain Analysis`,\n        color: 'warning'\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"RNG Analysis Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        sx: {\n          mb: 4\n        },\n        children: symbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            onClick: () => addSymbol(index),\n            sx: {\n              fontSize: '2rem',\n              height: '80px'\n            },\n            children: symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          variant: \"contained\",\n          color: \"secondary\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: simulateSequence,\n            children: \"Generate 90 Random\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: clearDatabase,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Undo last symbol\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: undoLastSymbol,\n              disabled: sequence.length === 0,\n              sx: {\n                ml: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(UndoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 3,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Current Sequence (\", sequence.length, \" symbols)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: Math.min(sequence.length / 300 * 100, 100),\n          color: thresholdInfo.color,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Alert, {\n          severity: thresholdInfo.color,\n          sx: {\n            mb: 2\n          },\n          children: thresholdInfo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: 1,\n            maxHeight: '200px',\n            overflowY: 'auto',\n            mb: 3,\n            p: 2,\n            border: '1px solid #eee',\n            borderRadius: 1\n          },\n          children: Array.isArray(sequence) && sequence.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [symbols[item.symbol], \" (\", item.timestamp, \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"1FjrJ7IR8JMRvnCWJCBoX0OfEMw=\");\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Grid","Typography","Button","Box","ButtonGroup","IconButton","Tooltip","LinearProgress","Alert","Paper","UndoIcon","jsxDEV","_jsxDEV","GamePage","_s","sequence","setSequence","thresholdInfo","setThresholdInfo","level","message","color","symbols","loadSequence","response","fetch","data","json","symbolsArray","Array","isArray","isValidSymbolItem","item","symbol","created_at","formattedSequence","filter","map","timestamp","getThresholdInfo","length","error","console","addSymbol","symbolIndex","method","headers","body","JSON","stringify","Error","newSymbol","prevSequence","safeSequence","prevInfo","undoLastSymbol","slice","simulateSequence","i","randomValue","Math","floor","random","Promise","resolve","setTimeout","clearDatabase","count","maxWidth","children","sx","mt","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","mb","index","xs","fullWidth","onClick","fontSize","height","title","disabled","ml","elevation","p","display","justifyContent","alignItems","value","min","severity","flexWrap","gap","maxHeight","overflowY","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/User/trial/src/pages/GamePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Grid, \n  Card, \n  CardContent, \n  Typography, \n  Button,\n  Box,\n  ButtonGroup,\n  IconButton,\n  Tooltip,\n  LinearProgress,\n  Alert,\n  Paper\n} from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\n\ninterface CardSymbol {\n  symbol: number;\n  timestamp: string;\n}\n\ninterface ThresholdInfo {\n  level: number;\n  message: string;\n  color: string;\n}\n\nconst GamePage: React.FC = () => {\n  const [sequence, setSequence] = useState<CardSymbol[]>([]);\n  const [thresholdInfo, setThresholdInfo] = useState<ThresholdInfo>({ \n    level: 1, \n    message: '100 more symbols until Markov Chain Analysis', \n    color: 'warning' \n  });\n  const symbols = ['♠', '♥', '♦', '♣'];\n\n  const loadSequence = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sequences/1');\n      const data = await response.json();\n      \n      // Ensure data.symbols exists and is an array\n      const symbolsArray = Array.isArray(data?.symbols) ? data.symbols : [];\n      \n      // Type guard to ensure each item has the required properties\n      const isValidSymbolItem = (item: any): item is { symbol: number; created_at: string } => {\n        return item && typeof item.symbol === 'number' && typeof item.created_at === 'string';\n      };\n\n      const formattedSequence = symbolsArray\n        .filter(isValidSymbolItem)\n        .map((item): CardSymbol => ({\n          symbol: item.symbol,\n          timestamp: item.created_at\n        }));\n\n      setSequence(formattedSequence);\n      setThresholdInfo(getThresholdInfo(formattedSequence.length));\n    } catch (error) {\n      console.error('Error loading sequence:', error);\n      setSequence([]);\n    }\n  };\n\n  useEffect(() => {\n    loadSequence();\n  }, []);\n\n  const addSymbol = async (symbolIndex: number) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sequences/1/symbol', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ symbol: symbolIndex }),\n      });\n      const data = await response.json();\n      \n      if (!data?.created_at) {\n        throw new Error('Invalid response from server');\n      }\n\n      const newSymbol: CardSymbol = {\n        symbol: symbolIndex,\n        timestamp: data.created_at\n      };\n\n      setSequence(prevSequence => {\n        // Ensure prevSequence is an array\n        const safeSequence = Array.isArray(prevSequence) ? prevSequence : [];\n        return [...safeSequence, newSymbol];\n      });\n\n      setThresholdInfo(prevInfo => getThresholdInfo(sequence.length + 1));\n    } catch (error) {\n      console.error('Error adding symbol:', error);\n    }\n  };\n\n  const undoLastSymbol = async () => {\n    if (!Array.isArray(sequence) || sequence.length === 0) return;\n    \n    try {\n      await fetch('http://localhost:5000/api/sequences/1/undo', {\n        method: 'DELETE',\n      });\n      setSequence(prevSequence => {\n        // Ensure prevSequence is an array\n        const safeSequence = Array.isArray(prevSequence) ? prevSequence : [];\n        return safeSequence.slice(0, -1);\n      });\n      setThresholdInfo(prevInfo => getThresholdInfo(sequence.length - 1));\n    } catch (error) {\n      console.error('Error undoing last symbol:', error);\n    }\n  };\n\n  const simulateSequence = async () => {\n    for (let i = 0; i < 90; i++) {\n      const randomValue = Math.floor(Math.random() * 4);\n      await addSymbol(randomValue);\n      // Small delay to prevent overwhelming the server\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n  };\n\n  const clearDatabase = async () => {\n    try {\n      await fetch('http://localhost:5000/api/sequences/cleanup', {\n        method: 'DELETE',\n      });\n      setSequence([]);\n      setThresholdInfo({ \n        level: 1, \n        message: '100 more symbols until Markov Chain Analysis', \n        color: 'warning' \n      });\n    } catch (error) {\n      console.error('Error clearing database:', error);\n    }\n  };\n\n  const getThresholdInfo = (count: number): ThresholdInfo => {\n    if (count >= 300) {\n      return {\n        level: 4,\n        message: 'Autocorrelation Analysis Active',\n        color: 'success'\n      };\n    } else if (count >= 200) {\n      return {\n        level: 3,\n        message: 'Runs Test Analysis Active',\n        color: 'info'\n      };\n    } else if (count >= 100) {\n      return {\n        level: 2,\n        message: 'Markov Chain Analysis Active',\n        color: 'primary'\n      };\n    } else {\n      return {\n        level: 1,\n        message: `${100 - count} more symbols until Markov Chain Analysis`,\n        color: 'warning'\n      };\n    }\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          RNG Analysis Game\n        </Typography>\n\n        <Grid container spacing={2} sx={{ mb: 4 }}>\n          {symbols.map((symbol, index) => (\n            <Grid item xs={3} key={index}>\n              <Button \n                variant=\"contained\" \n                fullWidth \n                onClick={() => addSymbol(index)}\n                sx={{ fontSize: '2rem', height: '80px' }}\n              >\n                {symbol}\n              </Button>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Box sx={{ mb: 4 }}>\n          <ButtonGroup variant=\"contained\" color=\"secondary\" fullWidth>\n            <Button onClick={simulateSequence}>\n              Generate 90 Random\n            </Button>\n            <Button onClick={clearDatabase}>\n              Clear All\n            </Button>\n            <Tooltip title=\"Undo last symbol\">\n              <IconButton \n                onClick={undoLastSymbol}\n                disabled={sequence.length === 0}\n                sx={{ ml: 1 }}\n              >\n                <UndoIcon />\n              </IconButton>\n            </Tooltip>\n          </ButtonGroup>\n        </Box>\n\n        <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n            <Typography variant=\"h6\">\n              Current Sequence ({sequence.length} symbols)\n            </Typography>\n          </Box>\n\n          <LinearProgress \n            variant=\"determinate\" \n            value={Math.min((sequence.length / 300) * 100, 100)} \n            color={thresholdInfo.color as any}\n            sx={{ mb: 2 }}\n          />\n          \n          <Alert severity={thresholdInfo.color as any} sx={{ mb: 2 }}>\n            {thresholdInfo.message}\n          </Alert>\n\n          <Box sx={{ \n            display: 'flex', \n            flexWrap: 'wrap', \n            gap: 1, \n            maxHeight: '200px', \n            overflowY: 'auto', \n            mb: 3,\n            p: 2,\n            border: '1px solid #eee',\n            borderRadius: 1\n          }}>\n            {Array.isArray(sequence) && sequence.map((item, index) => (\n              <Typography key={index} variant=\"body1\">\n                {symbols[item.symbol]} ({item.timestamp})\n              </Typography>\n            ))}\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default GamePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}