{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\trial\\\\src\\\\pages\\\\AnalysisPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, Box, Paper, CircularProgress, Alert, Grid, Button, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip as ChartTooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, ChartTooltip, Legend);\nconst AnalysisPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [sequences, setSequences] = useState([]);\n  const [analysisData, setAnalysisData] = useState({});\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:5000/api/sequences/1');\n      const data = await response.json();\n      if (!data || !Array.isArray(data.symbols)) {\n        console.error('Invalid sequence data received:', data);\n        setError('Invalid data format received from server');\n        setSequences([]);\n        return;\n      }\n      setSequences(data.symbols);\n      if (data.analyses) {\n        setAnalysisData(data.analyses);\n      }\n    } catch (err) {\n      console.error('Error fetching analysis data:', err);\n      setError('Failed to fetch analysis data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const renderTransitionMatrix = () => {\n    var _analysisData$markovC;\n    if (!((_analysisData$markovC = analysisData.markovChain) !== null && _analysisData$markovC !== void 0 && _analysisData$markovC.matrix)) return null;\n    const matrix = analysisData.markovChain.matrix;\n    const symbols = Array.from(new Set([...Object.keys(matrix), ...Object.values(matrix).flatMap(row => Object.keys(row))])).sort();\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"From \\u2193 To \\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), symbols.map(symbol => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: symbol\n            }, symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: symbols.map(fromSymbol => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: fromSymbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), symbols.map(toSymbol => {\n              var _matrix$fromSymbol;\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                children: (((_matrix$fromSymbol = matrix[fromSymbol]) === null || _matrix$fromSymbol === void 0 ? void 0 : _matrix$fromSymbol[toSymbol]) || 0).toFixed(2)\n              }, toSymbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this);\n            })]\n          }, fromSymbol, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  };\n  const renderPredictionCard = (title, prediction, confidence, accuracy, extraInfo) => /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        children: \"Next Symbol Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: prediction !== null ? prediction : 'N/A'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Confidence: \", (confidence * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: [\"Historical Accuracy: \", (accuracy * 100).toFixed(1), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), extraInfo]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n  const renderChart = () => {\n    if (!Array.isArray(sequences) || sequences.length === 0) {\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        children: \"No sequence data available yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 14\n      }, this);\n    }\n    const chartData = {\n      labels: sequences.map((_, index) => index + 1),\n      datasets: [{\n        label: 'Symbol Values',\n        data: sequences,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    };\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'Sequence Pattern'\n        }\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 12\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"200px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Analysis Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 22\n        }, this),\n        onClick: fetchData,\n        disabled: loading,\n        children: \"Refresh Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 3\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Sequence Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), sequences.length === 0 ? /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"info\",\n            children: \"No sequences recorded yet. Add some symbols in the Game page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Total Symbols: \", sequences.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Pattern Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), renderChart()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), analysisData.markovChain && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: renderPredictionCard('Markov Chain Analysis', analysisData.markovChain.prediction, analysisData.markovChain.confidence, analysisData.markovChain.accuracy, renderTransitionMatrix())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), analysisData.entropy && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: renderPredictionCard('Entropy Analysis', analysisData.entropy.prediction, analysisData.entropy.confidence, analysisData.entropy.accuracy, /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Entropy Score: \", analysisData.entropy.entropy.toFixed(3)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), analysisData.chiSquare && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: renderPredictionCard('Chi-Square Test', analysisData.chiSquare.prediction, analysisData.chiSquare.confidence, analysisData.chiSquare.accuracy, /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"\\u03C7\\xB2 Value: \", analysisData.chiSquare.chiSquare.toFixed(3)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"p-value: \", analysisData.chiSquare.pValue.toFixed(3)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), analysisData.monteCarlo && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: renderPredictionCard('Monte Carlo Simulation', analysisData.monteCarlo.prediction, analysisData.monteCarlo.confidence, analysisData.monteCarlo.accuracy, /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Based on \", analysisData.monteCarlo.simulations, \" simulations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(AnalysisPage, \"UBS0oz8QSRfLHntEQhxhEU/MrYg=\");\n_c = AnalysisPage;\nexport default AnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"AnalysisPage\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","Box","Paper","CircularProgress","Alert","Grid","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","RefreshIcon","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","ChartTooltip","Legend","jsxDEV","_jsxDEV","register","AnalysisPage","_s","loading","setLoading","error","setError","sequences","setSequences","analysisData","setAnalysisData","fetchData","response","fetch","data","json","Array","isArray","symbols","console","analyses","err","renderTransitionMatrix","_analysisData$markovC","markovChain","matrix","from","Set","Object","keys","values","flatMap","row","sort","component","sx","mt","children","size","fileName","_jsxFileName","lineNumber","columnNumber","map","symbol","fromSymbol","scope","toSymbol","_matrix$fromSymbol","toFixed","renderPredictionCard","title","prediction","confidence","accuracy","extraInfo","elevation","p","height","variant","gutterBottom","mb","color","renderChart","length","severity","chartData","labels","_","index","datasets","label","borderColor","tension","options","responsive","plugins","legend","position","display","text","justifyContent","alignItems","minHeight","startIcon","onClick","disabled","container","spacing","item","xs","md","entropy","chiSquare","pValue","monteCarlo","simulations","_c","$RefreshReg$"],"sources":["C:/Users/User/trial/src/pages/AnalysisPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  CircularProgress,\n  Alert,\n  Grid,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Tooltip\n} from '@mui/material';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip as ChartTooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  ChartTooltip,\n  Legend\n);\n\ninterface AnalysisData {\n  markovChain?: {\n    matrix: Record<string, Record<string, number>>;\n    prediction: number | null;\n    confidence: number;\n    accuracy: number;\n  };\n  entropy?: {\n    entropy: number;\n    prediction: number | null;\n    confidence: number;\n    accuracy: number;\n  };\n  chiSquare?: {\n    chiSquare: number;\n    pValue: number;\n    prediction: number | null;\n    confidence: number;\n    accuracy: number;\n  };\n  monteCarlo?: {\n    simulations: number;\n    prediction: number | null;\n    confidence: number;\n    accuracy: number;\n  };\n}\n\nconst AnalysisPage: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [sequences, setSequences] = useState<number[]>([]);\n  const [analysisData, setAnalysisData] = useState<AnalysisData>({});\n\n  const fetchData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch('http://localhost:5000/api/sequences/1');\n      const data = await response.json();\n\n      if (!data || !Array.isArray(data.symbols)) {\n        console.error('Invalid sequence data received:', data);\n        setError('Invalid data format received from server');\n        setSequences([]);\n        return;\n      }\n\n      setSequences(data.symbols);\n      if (data.analyses) {\n        setAnalysisData(data.analyses);\n      }\n    } catch (err) {\n      console.error('Error fetching analysis data:', err);\n      setError('Failed to fetch analysis data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const renderTransitionMatrix = () => {\n    if (!analysisData.markovChain?.matrix) return null;\n    \n    const matrix = analysisData.markovChain.matrix;\n    const symbols = Array.from(new Set([\n      ...Object.keys(matrix),\n      ...Object.values(matrix).flatMap(row => Object.keys(row))\n    ])).sort();\n\n    return (\n      <TableContainer component={Paper} sx={{ mt: 2 }}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>From ↓ To →</TableCell>\n              {symbols.map(symbol => (\n                <TableCell key={symbol}>{symbol}</TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {symbols.map(fromSymbol => (\n              <TableRow key={fromSymbol}>\n                <TableCell component=\"th\" scope=\"row\">{fromSymbol}</TableCell>\n                {symbols.map(toSymbol => (\n                  <TableCell key={toSymbol}>\n                    {(matrix[fromSymbol]?.[toSymbol] || 0).toFixed(2)}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const renderPredictionCard = (\n    title: string,\n    prediction: number | null,\n    confidence: number,\n    accuracy: number,\n    extraInfo?: React.ReactNode\n  ) => (\n    <Paper elevation={3} sx={{ p: 3, height: '100%' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        {title}\n      </Typography>\n      <Box sx={{ mb: 2 }}>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Next Symbol Prediction\n        </Typography>\n        <Typography variant=\"h4\">\n          {prediction !== null ? prediction : 'N/A'}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Confidence: {(confidence * 100).toFixed(1)}%\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          Historical Accuracy: {(accuracy * 100).toFixed(1)}%\n        </Typography>\n      </Box>\n      {extraInfo}\n    </Paper>\n  );\n\n  const renderChart = () => {\n    if (!Array.isArray(sequences) || sequences.length === 0) {\n      return <Alert severity=\"info\">No sequence data available yet.</Alert>;\n    }\n\n    const chartData = {\n      labels: sequences.map((_, index) => index + 1),\n      datasets: [\n        {\n          label: 'Symbol Values',\n          data: sequences,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }\n      ]\n    };\n\n    const options = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top' as const,\n        },\n        title: {\n          display: true,\n          text: 'Sequence Pattern'\n        }\n      }\n    };\n\n    return <Line data={chartData} options={options} />;\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"200px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container>\n      <Box sx={{ mt: 4, mb: 4, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Typography variant=\"h4\">\n          Analysis Dashboard\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<RefreshIcon />}\n          onClick={fetchData}\n          disabled={loading}\n        >\n          Refresh Analysis\n        </Button>\n      </Box>\n\n      {error && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Sequence Overview\n            </Typography>\n            {sequences.length === 0 ? (\n              <Alert severity=\"info\">No sequences recorded yet. Add some symbols in the Game page.</Alert>\n            ) : (\n              <Typography>\n                Total Symbols: {sequences.length}\n              </Typography>\n            )}\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Pattern Visualization\n            </Typography>\n            {renderChart()}\n          </Paper>\n        </Grid>\n\n        {analysisData.markovChain && (\n          <Grid item xs={12} md={6}>\n            {renderPredictionCard(\n              'Markov Chain Analysis',\n              analysisData.markovChain.prediction,\n              analysisData.markovChain.confidence,\n              analysisData.markovChain.accuracy,\n              renderTransitionMatrix()\n            )}\n          </Grid>\n        )}\n\n        {analysisData.entropy && (\n          <Grid item xs={12} md={6}>\n            {renderPredictionCard(\n              'Entropy Analysis',\n              analysisData.entropy.prediction,\n              analysisData.entropy.confidence,\n              analysisData.entropy.accuracy,\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Entropy Score: {analysisData.entropy.entropy.toFixed(3)}\n              </Typography>\n            )}\n          </Grid>\n        )}\n\n        {analysisData.chiSquare && (\n          <Grid item xs={12} md={6}>\n            {renderPredictionCard(\n              'Chi-Square Test',\n              analysisData.chiSquare.prediction,\n              analysisData.chiSquare.confidence,\n              analysisData.chiSquare.accuracy,\n              <Box>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  χ² Value: {analysisData.chiSquare.chiSquare.toFixed(3)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  p-value: {analysisData.chiSquare.pValue.toFixed(3)}\n                </Typography>\n              </Box>\n            )}\n          </Grid>\n        )}\n\n        {analysisData.monteCarlo && (\n          <Grid item xs={12} md={6}>\n            {renderPredictionCard(\n              'Monte Carlo Simulation',\n              analysisData.monteCarlo.prediction,\n              analysisData.monteCarlo.confidence,\n              analysisData.monteCarlo.accuracy,\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Based on {analysisData.monteCarlo.simulations} simulations\n              </Typography>\n            )}\n          </Grid>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default AnalysisPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}