{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\trial\\\\src\\\\pages\\\\GameAnalysisPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { Container, Grid, Button, Typography, Box, Paper, Alert, CircularProgress, ButtonGroup, IconButton } from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Backend API response interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// API Configuration\nconst API_BASE_URL = 'http://localhost:5000';\nconst API_ENDPOINTS = {\n  SEQUENCES: `${API_BASE_URL}/api/sequences`,\n  ANALYSIS: `${API_BASE_URL}/api/analysis`,\n  ADD_SYMBOL: `${API_BASE_URL}/api/sequences/symbol`,\n  UNDO: `${API_BASE_URL}/api/sequences/undo`,\n  GENERATE: `${API_BASE_URL}/api/sequences/generate-test-data`,\n  RESET: `${API_BASE_URL}/api/sequences/reset`\n};\n\n// Debug fetch wrapper\nconst debugFetch = async (url, options = {}) => {\n  console.group(`API Call: ${options.method || 'GET'} ${url}`);\n  console.log('Request Options:', options);\n  try {\n    const response = await fetch(url, options);\n    console.log('Response Status:', response.status);\n    if (!response.ok) {\n      console.error('Response Error:', response.statusText);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Response Data:', data);\n    return data;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Matrix transformation helper\nconst transformMatrix = matrixRecord => {\n  if (!matrixRecord) return [];\n  const keys = Object.keys(matrixRecord).sort((a, b) => Number(a) - Number(b));\n  return keys.map(row => keys.map(col => matrixRecord[row][col] || 0));\n};\n\n// Analysis data transformer\nconst transformAnalysisData = backendData => {\n  // If no data or no symbols, return null predictions with base confidence\n  if (!(backendData !== null && backendData !== void 0 && backendData.sampleAnalysis) || backendData.symbols === 0) {\n    return {\n      markovChain: {\n        predictedNext: undefined,\n        confidence: 0.25\n      },\n      entropy: {\n        predictedNext: undefined,\n        confidence: 0.25\n      },\n      chiSquare: {\n        predictedNext: undefined,\n        confidence: 0.25\n      },\n      monteCarlo: {\n        predictedNext: undefined,\n        confidence: 0.25\n      }\n    };\n  }\n  const {\n    prediction,\n    confidence,\n    matrix\n  } = backendData.sampleAnalysis;\n\n  // Only include predictions if we have enough data\n  const predictedNext = backendData.symbols >= 100 ? prediction : undefined;\n  return {\n    markovChain: {\n      matrix: transformMatrix(matrix),\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25\n    },\n    entropy: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25,\n      value: confidence\n    },\n    chiSquare: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25,\n      value: confidence\n    },\n    monteCarlo: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25\n    }\n  };\n};\nconst GameAnalysisPage = () => {\n  _s();\n  const [sequence, setSequence] = useState([]);\n  const [analysisData, setAnalysisData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n  const symbols = ['♠', '♥', '♦', '♣'];\n  const sessionId = useMemo(() => uuidv4(), []);\n  const handleError = (message, type = 'error') => {\n    setError({\n      message,\n      type,\n      timestamp: Date.now()\n    });\n    if (type === 'error') {\n      setRetryCount(prev => prev + 1);\n    }\n  };\n  useEffect(() => {\n    if (retryCount >= MAX_RETRIES) {\n      handleError('Maximum retry attempts reached. Please refresh the page.', 'warning');\n    }\n  }, [retryCount]);\n  useEffect(() => {\n    const socket = new WebSocket(`ws://localhost:5000/ws/${sessionId}`);\n    socket.onmessage = event => {\n      try {\n        const update = JSON.parse(event.data);\n        if (update.type === 'sequence_update') {\n          console.log('WebSocket update received:', update.data);\n          const transformedData = transformAnalysisData(update.data);\n          console.log('Transformed WebSocket data:', transformedData);\n          setAnalysisData(transformedData);\n        }\n      } catch (error) {\n        console.error('Error processing WebSocket message:', error);\n      }\n    };\n    socket.onerror = error => {\n      console.error('WebSocket error:', error);\n      handleError('WebSocket connection error');\n    };\n    return () => {\n      socket.close();\n    };\n  }, [sessionId]);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const [sequenceData, analysisData] = await Promise.all([debugFetch(API_ENDPOINTS.SEQUENCES), debugFetch(API_ENDPOINTS.ANALYSIS)]);\n      console.log('Raw Analysis Response:', analysisData);\n      if (sequenceData.sequence) {\n        setSequence(sequenceData.sequence);\n      }\n\n      // Transform and set analysis data\n      setAnalysisData(transformAnalysisData(analysisData));\n    } catch (error) {\n      console.error('Error loading data:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n  const handleCardClick = async index => {\n    try {\n      if (retryCount >= MAX_RETRIES) {\n        handleError('Please refresh the page to continue.', 'warning');\n        return;\n      }\n      setLoading(true);\n      setError(null);\n      const data = await debugFetch(API_ENDPOINTS.ADD_SYMBOL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          symbol: index\n        })\n      });\n      setSequence(prev => [...prev, {\n        symbol: index,\n        created_at: new Date().toISOString()\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to submit sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const undoLastSymbol = async () => {\n    try {\n      await debugFetch(API_ENDPOINTS.UNDO, {\n        method: 'DELETE'\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to undo last symbol');\n    }\n  };\n  const generateTestData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      await debugFetch(API_ENDPOINTS.GENERATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to generate test data');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const resetDatabase = async () => {\n    try {\n      setError(null);\n      await debugFetch(API_ENDPOINTS.RESET, {\n        method: 'POST'\n      });\n      await loadData();\n      handleError('Database reset successfully', 'info');\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to reset database');\n    }\n  };\n  const renderAnalysisValue = (name, data) => {\n    if (!data) return 'No Data Available';\n\n    // Show matrix size for Markov Chain\n    if (name === 'Markov' && data.matrix) {\n      var _data$matrix$0$length, _data$matrix$;\n      return `Matrix: ${data.matrix.length}x${(_data$matrix$0$length = (_data$matrix$ = data.matrix[0]) === null || _data$matrix$ === void 0 ? void 0 : _data$matrix$.length) !== null && _data$matrix$0$length !== void 0 ? _data$matrix$0$length : 0}`;\n    }\n\n    // Show values for other analysis types\n    if (data.value !== undefined) {\n      return `Value: ${data.value.toFixed(3)}`;\n    }\n    return 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: error.type,\n      onClose: () => setError(null),\n      sx: {\n        mb: 2\n      },\n      children: [error.message, error.type === 'warning' && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: () => window.location.reload(),\n        sx: {\n          ml: 2\n        },\n        children: \"Refresh Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: \"Game Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"contained\",\n              size: \"large\",\n              sx: {\n                mb: 2,\n                '& .MuiButton-root': {\n                  fontSize: '1.5rem',\n                  padding: '12px 24px'\n                }\n              },\n              children: symbols.map((symbol, index) => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleCardClick(index),\n                disabled: loading,\n                children: symbol\n              }, symbol, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: generateTestData,\n              disabled: loading,\n              sx: {\n                mr: 2\n              },\n              children: \"Generate Test Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: undoLastSymbol,\n              disabled: loading || sequence.length === 0,\n              color: \"primary\",\n              size: \"large\",\n              children: /*#__PURE__*/_jsxDEV(UndoIcon, {\n                fontSize: \"large\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: resetDatabase,\n              disabled: loading,\n              sx: {\n                ml: 2\n              },\n              children: \"Reset DB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Total Symbols: \", sequence.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Analysis Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              p: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: Object.entries({\n              'Markov': analysisData.markovChain,\n              'Entropy': analysisData.entropy,\n              'Chi²': analysisData.chiSquare,\n              'Monte Carlo': analysisData.monteCarlo\n            }).map(([name, data]) => data && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 1,\n                sx: {\n                  p: 1,\n                  backgroundColor: 'background.default',\n                  height: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    fontWeight: 'bold'\n                  },\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    mt: 0.5\n                  },\n                  children: renderAnalysisValue(name, data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [\"Next: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: data.predictedNext !== undefined && data.predictedNext !== null ? symbols[data.predictedNext] : 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  display: \"block\",\n                  color: \"text.secondary\",\n                  children: [\"Conf: \", data.confidence ? `${(data.confidence * 100).toFixed(0)}%` : 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 23\n              }, this)\n            }, name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(GameAnalysisPage, \"IbP0eKdK9MsM2ua2cPtP81zWmMg=\");\n_c = GameAnalysisPage;\nexport default GameAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"GameAnalysisPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Container","Grid","Button","Typography","Box","Paper","Alert","CircularProgress","ButtonGroup","IconButton","UndoIcon","v4","uuidv4","jsxDEV","_jsxDEV","API_BASE_URL","API_ENDPOINTS","SEQUENCES","ANALYSIS","ADD_SYMBOL","UNDO","GENERATE","RESET","debugFetch","url","options","console","group","method","log","response","fetch","status","ok","error","statusText","Error","data","json","groupEnd","transformMatrix","matrixRecord","keys","Object","sort","a","b","Number","map","row","col","transformAnalysisData","backendData","sampleAnalysis","symbols","markovChain","predictedNext","undefined","confidence","entropy","chiSquare","monteCarlo","prediction","matrix","value","GameAnalysisPage","_s","sequence","setSequence","analysisData","setAnalysisData","loading","setLoading","setError","retryCount","setRetryCount","MAX_RETRIES","sessionId","handleError","message","type","timestamp","Date","now","prev","socket","WebSocket","onmessage","event","update","JSON","parse","transformedData","onerror","close","loadData","sequenceData","Promise","all","handleCardClick","index","headers","body","stringify","symbol","created_at","toISOString","undoLastSymbol","generateTestData","resetDatabase","renderAnalysisValue","name","_data$matrix$0$length","_data$matrix$","length","toFixed","maxWidth","sx","mt","mb","children","severity","onClose","size","onClick","window","location","reload","ml","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","item","xs","md","elevation","p","variant","gutterBottom","fontSize","padding","disabled","display","alignItems","mr","color","justifyContent","entries","backgroundColor","height","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/User/trial/src/pages/GameAnalysisPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Container,\n  Grid,\n  Button,\n  Typography,\n  Box,\n  Paper,\n  Alert,\n  CircularProgress,\n  ButtonGroup,\n  IconButton,\n  Tooltip\n} from '@mui/material';\nimport UndoIcon from '@mui/icons-material/Undo';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface SequenceItem {\n  symbol: number;\n  created_at: string;\n}\n\ninterface AnalysisData {\n  markovChain?: {\n    matrix?: number[][]; \n    predictedNext?: number;\n    confidence: number;\n  };\n  entropy?: {\n    value?: number; \n    predictedNext?: number;\n    confidence: number;\n  };\n  chiSquare?: {\n    value?: number; \n    predictedNext?: number;\n    confidence: number;\n  };\n  monteCarlo?: {\n    predictedNext?: number;\n    confidence: number;\n  };\n}\n\ninterface SequenceResponse {\n  success: boolean;\n  batchId: string;\n  sequence: SequenceItem;\n}\n\ninterface WebSocketUpdate {\n  type: 'sequence_update';\n  data: {\n    analysisResults: AnalysisData;\n    sequence: SequenceItem;\n  };\n}\n\ninterface ErrorState {\n  message: string;\n  type: 'error' | 'warning' | 'info';\n  timestamp: number;\n}\n\n// Backend API response interface\ninterface BackendAnalysis {\n  symbols: number;\n  tools: string[];\n  sampleAnalysis: {\n    matrix: { [key: string]: { [key: string]: number } };\n    prediction: number | undefined;\n    confidence: number;\n    accuracy: number;\n  };\n}\n\n// API Configuration\nconst API_BASE_URL = 'http://localhost:5000';\nconst API_ENDPOINTS = {\n  SEQUENCES: `${API_BASE_URL}/api/sequences`,\n  ANALYSIS: `${API_BASE_URL}/api/analysis`,\n  ADD_SYMBOL: `${API_BASE_URL}/api/sequences/symbol`,\n  UNDO: `${API_BASE_URL}/api/sequences/undo`,\n  GENERATE: `${API_BASE_URL}/api/sequences/generate-test-data`,\n  RESET: `${API_BASE_URL}/api/sequences/reset`\n};\n\n// Debug fetch wrapper\nconst debugFetch = async (url: string, options: RequestInit = {}) => {\n  console.group(`API Call: ${options.method || 'GET'} ${url}`);\n  console.log('Request Options:', options);\n  \n  try {\n    const response = await fetch(url, options);\n    console.log('Response Status:', response.status);\n    \n    if (!response.ok) {\n      console.error('Response Error:', response.statusText);\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    console.log('Response Data:', data);\n    return data;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  } finally {\n    console.groupEnd();\n  }\n};\n\n// Matrix transformation helper\nconst transformMatrix = (matrixRecord: { [key: string]: { [key: string]: number } } | undefined): number[][] => {\n  if (!matrixRecord) return [];\n  \n  const keys = Object.keys(matrixRecord).sort((a, b) => Number(a) - Number(b));\n  return keys.map(row => \n    keys.map(col => matrixRecord[row][col] || 0)\n  );\n};\n\n// Analysis data transformer\nconst transformAnalysisData = (backendData: BackendAnalysis | null): AnalysisData => {\n  // If no data or no symbols, return null predictions with base confidence\n  if (!backendData?.sampleAnalysis || backendData.symbols === 0) {\n    return {\n      markovChain: { predictedNext: undefined, confidence: 0.25 },\n      entropy: { predictedNext: undefined, confidence: 0.25 },\n      chiSquare: { predictedNext: undefined, confidence: 0.25 },\n      monteCarlo: { predictedNext: undefined, confidence: 0.25 }\n    };\n  }\n\n  const { prediction, confidence, matrix } = backendData.sampleAnalysis;\n  \n  // Only include predictions if we have enough data\n  const predictedNext = backendData.symbols >= 100 ? prediction : undefined;\n  \n  return {\n    markovChain: {\n      matrix: transformMatrix(matrix),\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25\n    },\n    entropy: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25,\n      value: confidence\n    },\n    chiSquare: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25,\n      value: confidence\n    },\n    monteCarlo: {\n      predictedNext,\n      confidence: predictedNext !== undefined ? confidence : 0.25\n    }\n  };\n};\n\nconst GameAnalysisPage: React.FC = () => {\n  const [sequence, setSequence] = useState<SequenceItem[]>([]);\n  const [analysisData, setAnalysisData] = useState<AnalysisData>({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<ErrorState | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n  const MAX_RETRIES = 3;\n\n  const symbols = ['♠', '♥', '♦', '♣'];\n\n  const sessionId = useMemo(() => uuidv4(), []);\n\n  const handleError = (message: string, type: ErrorState['type'] = 'error') => {\n    setError({\n      message,\n      type,\n      timestamp: Date.now()\n    });\n    \n    if (type === 'error') {\n      setRetryCount(prev => prev + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (retryCount >= MAX_RETRIES) {\n      handleError('Maximum retry attempts reached. Please refresh the page.', 'warning');\n    }\n  }, [retryCount]);\n\n  useEffect(() => {\n    const socket = new WebSocket(`ws://localhost:5000/ws/${sessionId}`);\n    \n    socket.onmessage = (event) => {\n      try {\n        const update: WebSocketUpdate = JSON.parse(event.data);\n        if (update.type === 'sequence_update') {\n          console.log('WebSocket update received:', update.data);\n          const transformedData = transformAnalysisData(update.data as unknown as BackendAnalysis);\n          console.log('Transformed WebSocket data:', transformedData);\n          setAnalysisData(transformedData);\n        }\n      } catch (error) {\n        console.error('Error processing WebSocket message:', error);\n      }\n    };\n\n    socket.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      handleError('WebSocket connection error');\n    };\n\n    return () => {\n      socket.close();\n    };\n  }, [sessionId]);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const [sequenceData, analysisData] = await Promise.all([\n        debugFetch(API_ENDPOINTS.SEQUENCES),\n        debugFetch(API_ENDPOINTS.ANALYSIS)\n      ]);\n\n      console.log('Raw Analysis Response:', analysisData);\n\n      if (sequenceData.sequence) {\n        setSequence(sequenceData.sequence);\n      }\n\n      // Transform and set analysis data\n      setAnalysisData(transformAnalysisData(analysisData));\n\n    } catch (error) {\n      console.error('Error loading data:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to load data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleCardClick = async (index: number) => {\n    try {\n      if (retryCount >= MAX_RETRIES) {\n        handleError('Please refresh the page to continue.', 'warning');\n        return;\n      }\n\n      setLoading(true);\n      setError(null);\n      \n      const data = await debugFetch(API_ENDPOINTS.ADD_SYMBOL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ symbol: index })\n      });\n      \n      setSequence(prev => [...prev, {\n        symbol: index,\n        created_at: new Date().toISOString()\n      }]);\n      \n    } catch (error) {\n      console.error('Error:', error);\n      handleError(error instanceof Error ? error.message : 'Failed to submit sequence');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const undoLastSymbol = async () => {\n    try {\n      await debugFetch(API_ENDPOINTS.UNDO, {\n        method: 'DELETE'\n      });\n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to undo last symbol');\n    }\n  };\n\n  const generateTestData = async () => {\n    try {\n      setError(null);\n      setLoading(true);\n      \n      await debugFetch(API_ENDPOINTS.GENERATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      await loadData();\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to generate test data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const resetDatabase = async () => {\n    try {\n      setError(null);\n      await debugFetch(API_ENDPOINTS.RESET, {\n        method: 'POST'\n      });\n      await loadData();\n      handleError('Database reset successfully', 'info');\n    } catch (error) {\n      handleError(error instanceof Error ? error.message : 'Failed to reset database');\n    }\n  };\n\n  const renderAnalysisValue = (name: string, data: any) => {\n    if (!data) return 'No Data Available';\n\n    // Show matrix size for Markov Chain\n    if (name === 'Markov' && data.matrix) {\n      return `Matrix: ${data.matrix.length}x${data.matrix[0]?.length ?? 0}`;\n    }\n\n    // Show values for other analysis types\n    if (data.value !== undefined) {\n      return `Value: ${data.value.toFixed(3)}`;\n    }\n\n    return 'N/A';\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {error && (\n        <Alert \n          severity={error.type}\n          onClose={() => setError(null)}\n          sx={{ mb: 2 }}\n        >\n          {error.message}\n          {error.type === 'warning' && (\n            <Button\n              size=\"small\"\n              onClick={() => window.location.reload()}\n              sx={{ ml: 2 }}\n            >\n              Refresh Page\n            </Button>\n          )}\n        </Alert>\n      )}\n\n      <Grid container spacing={3}>\n        {/* Game Controls */}\n        <Grid item xs={12} md={4}>\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <Typography variant=\"h5\" gutterBottom>\n              Game Controls\n            </Typography>\n            <Box sx={{ mb: 3 }}>\n              <ButtonGroup \n                variant=\"contained\" \n                size=\"large\"\n                sx={{ \n                  mb: 2,\n                  '& .MuiButton-root': {\n                    fontSize: '1.5rem',\n                    padding: '12px 24px',\n                  }\n                }}\n              >\n                {symbols.map((symbol, index) => (\n                  <Button\n                    key={symbol}\n                    onClick={() => handleCardClick(index)}\n                    disabled={loading}\n                  >\n                    {symbol}\n                  </Button>\n                ))}\n              </ButtonGroup>\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n              <Button\n                variant=\"contained\"\n                onClick={generateTestData}\n                disabled={loading}\n                sx={{ mr: 2 }}\n              >\n                Generate Test Data\n              </Button>\n              <IconButton \n                onClick={undoLastSymbol}\n                disabled={loading || sequence.length === 0}\n                color=\"primary\"\n                size=\"large\"\n              >\n                <UndoIcon fontSize=\"large\" />\n              </IconButton>\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                onClick={resetDatabase}\n                disabled={loading}\n                sx={{ ml: 2 }}\n              >\n                Reset DB\n              </Button>\n            </Box>\n            <Typography variant=\"h6\">\n              Total Symbols: {sequence.length}\n            </Typography>\n          </Paper>\n        </Grid>\n\n        {/* Analysis Results */}\n        <Grid item xs={12} md={5}>\n          <Paper elevation={3} sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Analysis Results\n            </Typography>\n            {loading ? (\n              <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\n                <CircularProgress />\n              </Box>\n            ) : (\n              <Grid container spacing={2}>\n                {Object.entries({\n                  'Markov': analysisData.markovChain,\n                  'Entropy': analysisData.entropy,\n                  'Chi²': analysisData.chiSquare,\n                  'Monte Carlo': analysisData.monteCarlo\n                }).map(([name, data]) => (\n                  data && (\n                    <Grid item xs={8} key={name}>\n                      <Paper \n                        elevation={1} \n                        sx={{ \n                          p: 1, \n                          backgroundColor: 'background.default',\n                          height: '100%'\n                        }}\n                      >\n                        <Typography variant=\"subtitle2\" sx={{ fontWeight: 'bold' }}>\n                          {name}\n                        </Typography>\n                        <Typography variant=\"body2\" sx={{ mt: 0.5 }}>\n                          {renderAnalysisValue(name, data)}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                          Next: <strong>\n                            {data.predictedNext !== undefined && data.predictedNext !== null\n                              ? symbols[data.predictedNext]\n                              : 'N/A'}\n                          </strong>\n                        </Typography>\n                        <Typography variant=\"caption\" display=\"block\" color=\"text.secondary\">\n                          Conf: {data.confidence ? `${(data.confidence * 100).toFixed(0)}%` : 'N/A'}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  )\n                ))}\n              </Grid>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default GameAnalysisPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}